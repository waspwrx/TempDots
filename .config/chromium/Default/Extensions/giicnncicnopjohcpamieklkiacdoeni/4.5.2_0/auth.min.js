function createSignInSuccessNotification(){var options={type:"basic",iconUrl:"images/icon_default_160.png",title:chrome.i18n.getMessage("extension_name"),message:chrome.i18n.getMessage("signin_success_message"),priority:0};chrome.notifications.create("_setup",options,function(){})}function createSignInFailureNotification(text,append){var msg;switch(text){case"offline":msg=chrome.i18n.getMessage("signin_failure_message_offline");break;case"permission":msg=chrome.i18n.getMessage("signin_failure_message_permission");break;case"server":msg=chrome.i18n.getMessage("signin_failure_message_server");break;case"auth":msg=chrome.i18n.getMessage("signin_failure_message_auth");break;case"gcm":msg=chrome.i18n.getMessage("signin_failure_message_gcm");break;case"api":msg="This browser does not support Google Sign-In.";break;default:msg=chrome.i18n.getMessage("signin_failure_message_unknown")}var options={type:"basic",iconUrl:"images/icon_rich_80.png",title:chrome.i18n.getMessage("signin_failure_title"),message:msg,priority:0};if(typeof append==="string"){options.contextMessage=append}chrome.notifications.create("_setup",options,function(){})}var waitingForGcmCallback=false;function signIn(callback){if(waitingForGcmCallback){callback(false);return}if(navigator.onLine){if(!chrome.identity){createSignInFailureNotification("api");callback(false);return}chrome.identity.getAuthToken({interactive:true},function(token){if(token){waitingForGcmCallback=true;chrome.gcm.register([GCM_ENTITY],function(registrationId){waitingForGcmCallback=false;if(chrome.runtime.lastError){console.log(chrome.runtime.lastError);createSignInFailureNotification("gcm",chrome.runtime.lastError.message);callback(false);return}chrome.runtime.getPlatformInfo(function(info){chrome.storage.local.get("device",function(items){getInstanceID(function(iid){var deviceName;if(typeof items.device==="undefined"){deviceName="Chrome "+Math.floor(Math.random()*89999+1e4);chrome.storage.local.set({device:deviceName},function(){})}else{deviceName=items.device}var postData={token:token,registration_id:registrationId,dp:info.os,v:VERSION,lang:getBrowserLanguages(),dn:deviceName,iid:iid};$.post(URL_REGISTER,postData,function(data){if(DEBUG)console.log(data);if(data.result=="ok"){createSignInSuccessNotification();chrome.storage.local.set({registered:true},function(){callback(true)})}else{if(DEBUG)console.log(data.message);createSignInFailureNotification("server",data.message);callback(false)}},"json").fail(function(){createSignInFailureNotification("server");callback(false)})})})})})}else{createSignInFailureNotification("permission");callback(false)}})}else{createSignInFailureNotification("offline");callback(false)}}function signOut(callback){chrome.storage.local.set({registered:false},function(){if(DEBUG)console.log("set registered=false");chrome.gcm.unregister(function(){if(DEBUG)console.log("gcm unregister");chrome.instanceID.deleteToken({authorizedEntity:GCM_ENTITY,scope:GCM_SCOPE},function(){if(DEBUG)console.log("iid delete token");callback()})})})}function getSignInStatus(callback){chrome.storage.local.get("registered",function(items){if(items.registered===true){if(!chrome.identity){callback(false)}chrome.identity.getAuthToken({interactive:false},function(token){if(token){callback(true)}else{callback(false)}})}else{callback(false)}})}function launchWebAuth(){chrome.identity.launchWebAuthFlow({url:URL_WEB_AUTH,interactive:true},function(url){console.log(url)})}